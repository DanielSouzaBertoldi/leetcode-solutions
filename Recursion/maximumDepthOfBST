/******************************************************************************
Given a binary tree, find its maximum depth.

The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.

Note: A leaf is a node with no children.

Example:

Given binary tree [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7

Return its depth = 3.

- Results (as of 2020-07-21)
Runtime: 4 ms (beats 94.14% of C submissions)
Memory Usage: 7.5 MB (beats 97.45% of C submissions)
*******************************************************************************/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */


int maxDepth(struct TreeNode* root){
  if(!root)
    return 0;

  if(!root->left && !root->right)
    return 1;
  
  int leftDepth = maxDepth(root->left);
  int rightDepth = maxDepth(root->right);
  
  if(leftDepth > rightDepth)
    return leftDepth + 1;
  return rightDepth + 1;
}
